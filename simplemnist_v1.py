# -*- coding: utf-8 -*-
"""SimpleMNIST-v1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IvakOCnv9bpS8Npag8HpC6p4Nf-nmY_i
"""

import tensorflow as tf
from tensorflow.examples.tutorials.mnist import input_data
from datetime import datetime

#load the dataset
mnist = input_data.read_data_sets("MNIST_data", one_hot=True)
# print(mnist)

x = tf.placeholder(tf.float32, shape=[None, 784])
y_ = tf.placeholder(tf.float32, shape=(None, 10))

W = tf.Variable(tf.zeros([784, 10]))
b = tf.Variable(tf.zeros([10]))

y = tf.nn.softmax(tf.matmul(x, W) + b)

cross_enropy = tf.reduce_mean(
                tf.nn.softmax_cross_entropy_with_logits(labels=y_, logits=y))

train_step = tf.train.GradientDescentOptimizer(0.5).minimize(cross_enropy)

init = tf.global_variables_initializer()
# ys = mnist.train.labels
# xs = mnist.train.images

with tf.Session() as sess:
  sess.run(init)
  for i in range(1000):
    xs, ys = mnist.train.next_batch(500)
    sess.run(train_step, feed_dict={x: xs, y_: ys})
    print("Batch #", i, " @ ", datetime.now())
  correct_prediction = tf.equal(tf.arg_max(y, 1), tf.arg_max(y_, 1))
  accuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))
  test_accuracy = sess.run(accuracy, feed_dict={x: mnist.test.images, y_: mnist.test.labels})
  print("Test accuracy: {0}%".format(test_accuracy * 100))